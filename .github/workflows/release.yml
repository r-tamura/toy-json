name: release
on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    name: build
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Cross-compilation
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - run: |
          zip --junk-paths tj-${{ matrix.target }}-${{ github.ref }} target/${{ matrix.target }}/release/tj{,.exe}
      - uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.target }}
          path: tj-${{ matrix.target }}.zip
  release:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - run: |
          ls -lR /home/runner/work/toy-json/toy-json/artifacts
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ github.workspace }}/artifacts/build-x86_64-unknown-linux-gnu/tj-x86_64-unknown-linux-gnu-${{ github.ref }}.zip
            ${{ github.workspace }}/artifacts/build-x86_64-pc-windows-gnu/tj-x86_64-pc-windows-gnu-${{ github.ref }}.zip
            ${{ github.workspace }}/artifacts/build-x86_64-apple-darwin/tj-x86_64-apple-darwin-${{ github.ref }}.zip
            ${{ github.workspace }}/artifacts/build-aarch64-apple-darwin/tj-aarch64-apple-darwin-${{ github.ref }}.zip